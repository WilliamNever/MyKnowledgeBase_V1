// <auto-generated />
using System;
using ConsoleForDNetFrameWork.DBModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleForDNetFrameWork.Migrations
{
    [DbContext(typeof(DBCTXTContext))]
    [Migration("20190911034204_20190911")]
    partial class _20190911
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleForDNetFrameWork.DBModels.Addresses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AddIdentity")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("Addr")
                        .HasColumnName("addr");

                    b.Property<string>("Email");

                    b.Property<string>("Phone")
                        .HasColumnName("phone");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasName("IX_UserID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ConsoleForDNetFrameWork.DBModels.RInfDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Briefs")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsRented");

                    b.Property<int>("RInfID");

                    b.HasKey("ID");

                    b.HasIndex("RInfID");

                    b.ToTable("RInfDetails");
                });

            modelBuilder.Entity("ConsoleForDNetFrameWork.DBModels.RInfor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Briefs")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsRented");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RentInfors");
                });

            modelBuilder.Entity("ConsoleForDNetFrameWork.DBModels.UserInfors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("LoginDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasName("UserNameUniqueIndex");

                    b.ToTable("UserInfors");
                });

            modelBuilder.Entity("ConsoleForDNetFrameWork.DBModels.Addresses", b =>
                {
                    b.HasOne("ConsoleForDNetFrameWork.DBModels.UserInfors", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.Addresses_dbo.UserInfors_UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConsoleForDNetFrameWork.DBModels.RInfDetails", b =>
                {
                    b.HasOne("ConsoleForDNetFrameWork.DBModels.RInfor", "RInfors")
                        .WithMany("RtDetails")
                        .HasForeignKey("RInfID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConsoleForDNetFrameWork.DBModels.RInfor", b =>
                {
                    b.HasOne("ConsoleForDNetFrameWork.DBModels.UserInfors", "User")
                        .WithMany("RentInfors")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
